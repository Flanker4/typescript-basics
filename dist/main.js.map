{"version":3,"file":"main.js","sourceRoot":"","sources":["../main.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n *  UTILS  AND TEMPLATES\n */\n\n// Images for Simple slider\nconst images: string[] = Array(7)\n  .fill(1)\n  .map((i, index) => `${index + 1}.jpeg`); // [1.jpeg, 2.jpeg ...]\n\n// Simple Slider Template\nconst simpleSliderTemplate = (source: string) => `\n   <img src=\"${source}\" alt=\"\" />\n`;\n\nconst createDOMElFromString = (domstring: string): HTMLElement => {\n  const html = new DOMParser().parseFromString(domstring, \"text/html\");\n  return <HTMLElement>html.body.firstChild;\n};\n\n// Slider Classes\nabstract class BaseSlider {\n  protected imagePath = \"./assets/\";\n\n  public currentIndex = 0;\n  public el: HTMLElement;\n  protected slides: HTMLElement[] = [];\n\n  // TODO: add union type for slides\n  abstract addSlides(slides: string[] | ITextSlide[]): void;\n\n  constructor(selector: string, private showButtons: boolean = true) {\n    this.el = document.querySelector(selector);\n  }\n\n  private nextIndex(distance: number): number {\n    return (\n      (this.currentIndex + distance + this.slides.length) % this.slides.length\n    );\n  }\n\n  public next(): void {\n    this.currentIndex = this.nextIndex(1);\n    this.showSlide(this.currentIndex);\n  }\n\n  public previous(): void {\n    this.currentIndex = this.nextIndex(-1);\n    this.showSlide(this.currentIndex);\n  }\n\n  protected showSlide(index: number): void {\n    this.slides.forEach((item, i) => {\n      if (index === i) {\n        item.classList.remove(\"is-hidden\");\n        return;\n      }\n\n      item.classList.add(\"is-hidden\");\n    });\n  }\n\n  private addButtons(): void {\n    const buttonsContainer = document.createElement(\"div\");\n    buttonsContainer.classList.add(\"navigation\");\n    buttonsContainer.classList.add(\"has-text-centered\");\n    buttonsContainer.innerHTML = `\n       <button class=\"prev button is-info\">Previous</button>\n       <button class=\"next button is-info\">Next</button>\n     `;\n\n    const prevButton = buttonsContainer.querySelector(\".prev\");\n    const nextButton = buttonsContainer.querySelector(\".next\");\n    prevButton.addEventListener(\"click\", () => this.previous());\n    nextButton.addEventListener(\"click\", () => this.next());\n\n    this.el.appendChild(buttonsContainer);\n  }\n\n  public render(): void {\n    this.slides.forEach((item, index) => {\n      item.classList.add(\"fadeIn\"); // adds fadeIn animation\n      if (index !== 0) {\n        item.classList.add(\"is-hidden\");\n      }\n\n      this.el.appendChild(item);\n    });\n    if (this.showButtons) {\n      this.addButtons();\n    }\n  }\n}\n\nclass SimpleSlider extends BaseSlider {\n  constructor(selector: string, showButtons = true) {\n    super(selector, showButtons);\n  }\n\n  addSlides(images: string[]) {\n    if (Array.isArray(images)) {\n      const sliderTemplate = (source: string) => {\n        const imgString: string = simpleSliderTemplate(this.imagePath + source);\n        return createDOMElFromString(imgString);\n      };\n\n      this.slides = images.map(source => sliderTemplate(source));\n    }\n  }\n}\n\nconst textSlides: ITextSlide[] = [\n  {\n    title: \"Angular\",\n    subtitle: \"is awesome\"\n  },\n  {\n    title: \"Typescript\",\n    subtitle: \"is awesome\",\n    baseClass: \"is-info\"\n  },\n  {\n    title: \"Lorem Ipsum\",\n    subtitle: \"dolorem\",\n    baseClass: \"is-success\"\n  }\n];\n// Text Slide interface\ninterface ITextSlide {\n  title: string;\n  subtitle: string;\n  // TODO: add named enum for classes\n  baseClass?: \"is-primary\" | \"is-success\" | \"is-info\";\n}\n\nconst textSliderTemplate = (textSlide: ITextSlide) => `\n<section class=\"hero is-medium ${\n  textSlide.baseClass ? textSlide.baseClass : \"is-primary\"\n} is-bold\">\n   <div class=\"hero-body\">\n   <div class=\"container\">\n       <h1 class=\"title\">\n       ${textSlide.title}\n       </h1>\n       <h2 class=\"subtitle\">\n       ${textSlide.subtitle}\n       </h2>\n   </div>\n   </div>\n</section>`;\n\nclass TextSlider extends BaseSlider {\n  constructor(selector: string, showButtons = true) {\n    super(selector, showButtons);\n  }\n\n  addSlides(slides: ITextSlide[]) {\n    if (Array.isArray(images)) {\n      const sliderTemplate = (source: ITextSlide) => {\n        const imgString: string = textSliderTemplate(source);\n        return createDOMElFromString(imgString);\n      };\n\n      this.slides = slides.map(source => sliderTemplate(source));\n    }\n  }\n}\n\nclass AutomaticSlider extends TextSlider {\n  constructor(selector: string, showButtons = false) {\n    super(selector, showButtons);\n  }\n\n  public render(): void {\n    super.render();\n    let t = this;\n    setInterval(function tick() {\n      t.next();\n    }, 2000);\n  }\n}\n\nconst simpleSlider = new SimpleSlider(\".simple-slider\");\nsimpleSlider.addSlides(images);\nsimpleSlider.render();\n\nconst textSlider = new TextSlider(\".text-slider\");\ntextSlider.addSlides(textSlides);\ntextSlider.render();\n\nconst automaticSlider = new AutomaticSlider(\".automatic-slider\");\nautomaticSlider.addSlides(textSlides);\nautomaticSlider.render();\n"]}